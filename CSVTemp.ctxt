#BlueJ class context
comment0.target=CSVTemp
comment1.params=parser\ option
comment1.target=org.apache.commons.csv.CSVRecord\ hottestOrColdestHourInFile(org.apache.commons.csv.CSVParser,\ int)
comment10.params=parser
comment10.target=double\ averageTemperature(org.apache.commons.csv.CSVParser)
comment11.params=
comment11.target=void\ testAverageTemperatureInFile()
comment12.params=parser\ value
comment12.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment13.params=
comment13.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment14.params=
comment14.target=void\ testLowestHumidity()
comment2.params=option
comment2.target=edu.duke.StorageResource\ fileWithHottestOrColdestTemperature(int)
comment3.params=option
comment3.target=void\ testBetweenDays(int)
comment4.params=option
comment4.target=void\ testHottestInDay(int)
comment5.params=option
comment5.target=org.apache.commons.csv.CSVRecord\ hottestOrColdestInManyDays(int)
comment6.params=currentRow\ largestSoFar\ option
comment6.target=org.apache.commons.csv.CSVRecord\ getLargestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord,\ int)
comment7.params=option
comment7.target=void\ testOfManyDays(int)
comment8.params=parser
comment8.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment9.params=
comment9.target=void\ testLowestHumidityInFile()
numComments=15
